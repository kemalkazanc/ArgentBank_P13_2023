{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n//Token\nimport { removeTokenStorage, isGetTokenStorage } from '../utils/tokenStorageFunctions';\n//State\nimport { loadStateLocalStorage, loadStateSessionStorage, removeState } from '../utils/stateStorageFunctions';\n// Middlewares\nimport { mwLogin, mwGetUserProfile, mwUpdateUserProfile } from '../middlewares/middlewares';\nconst initialStateDefault = {\n  firstName: '',\n  lastName: '',\n  isLoading: false,\n  isRememberMe: false,\n  isToken: false,\n  toggleEdit: false,\n  errorMessage: null\n};\n\n// Si local storage non chargé alors charger session storage\nconst persistedState = loadStateLocalStorage() ? loadStateLocalStorage() : loadStateSessionStorage();\n\n// Initialisation de inititialState (dépend de la présence ou non du storage)\nconst initialState = persistedState ? persistedState.state.auth : initialStateDefault;\nconst authSlice = createSlice({\n  name: 'authentification',\n  initialState,\n  reducers: {\n    // action de réinitialisation lors du clic sur Sign out (déconnexion)\n    actionLogout: state => {\n      removeTokenStorage(state.isRememberMe);\n      removeState();\n      state.firstName = '';\n      state.lastName = '';\n      state.isLoading = false;\n      state.isRememberMe = false;\n      state.isToken = false;\n      state.toggleEdit = false;\n    },\n    // action \"toggle\" d'ouverture/fermeture du formulaire d'édition\n    actionToggleEdit: state => {\n      state.toggleEdit = !state.toggleEdit;\n    },\n    // action \"toggle\" du checkbox \"Remember me\" du formulaire d'authentification (page Login)\n    actionIsRememberMe: state => {\n      state.isRememberMe = !state.isRememberMe;\n    },\n    // action de réinitialisation du message d'erreur\n    actionInitErrorMessage: state => {\n      state.errorMessage = null;\n    }\n  },\n  extraReducers: {\n    //Login\n    [mwLogin.fulfilled]: state => {\n      // Booleen isToken : token est-il présent dans le storage du navigateur ?\n      state.isToken = isGetTokenStorage();\n      state.errorMessage = null;\n    },\n    [mwLogin.pending]: state => {\n      state.isLoading = true; // début du chargement\n    },\n\n    [mwLogin.rejected]: (state, action) => {\n      state.isLoading = false; // fin du chargement\n      state.errorMessage = action.payload.message; // récupération du message d'erreur\n    },\n\n    // Profile : récupération du prénom et du nom de l'Utilisateur dans la base de données\n    [mwGetUserProfile.fulfilled]: (state, action) => {\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n      state.isLoading = false;\n      state.isToken = isGetTokenStorage();\n      state.errorMessage = null;\n    },\n    [mwGetUserProfile.rejected]: (state, action) => {\n      state.errorMessage = action.payload.message; // récupération du message d'erreur\n    },\n\n    // Profile : modification du prénom et du nom de l'Utilisateur dans la base de données\n    [mwUpdateUserProfile.fulfilled]: (state, action) => {\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n      state.errorMessage = null;\n    },\n    [mwUpdateUserProfile.rejected]: (state, action) => {\n      state.toggleEdit = false; // \"toggle\" d'ouverture/fermeture du formulaire d'édition\n      state.errorMessage = action.payload.message;\n    }\n  }\n});\nexport const {\n  actionIsRememberMe,\n  actionToggleEdit,\n  actionLogout,\n  actionInitErrorMessage\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","removeTokenStorage","isGetTokenStorage","loadStateLocalStorage","loadStateSessionStorage","removeState","mwLogin","mwGetUserProfile","mwUpdateUserProfile","initialStateDefault","firstName","lastName","isLoading","isRememberMe","isToken","toggleEdit","errorMessage","persistedState","initialState","state","auth","authSlice","name","reducers","actionLogout","actionToggleEdit","actionIsRememberMe","actionInitErrorMessage","extraReducers","fulfilled","pending","rejected","action","payload","message","actions","reducer"],"sources":["/Users/kemalkazanc/Desktop/OpenClass/Projet13/frontend/src/features/auth.slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n//Token\nimport {\n  removeTokenStorage,\n  isGetTokenStorage,\n} from '../utils/tokenStorageFunctions'\n//State\nimport {\n  loadStateLocalStorage,\n  loadStateSessionStorage,\n  removeState,\n} from '../utils/stateStorageFunctions'\n// Middlewares\nimport {\n  mwLogin,\n  mwGetUserProfile,\n  mwUpdateUserProfile,\n} from '../middlewares/middlewares'\n\nconst initialStateDefault = {\n  firstName: '',\n  lastName: '',\n  isLoading: false,\n  isRememberMe: false,\n  isToken: false,\n  toggleEdit: false,\n  errorMessage: null,\n}\n\n// Si local storage non chargé alors charger session storage\nconst persistedState = loadStateLocalStorage()\n  ? loadStateLocalStorage()\n  : loadStateSessionStorage()\n\n// Initialisation de inititialState (dépend de la présence ou non du storage)\nconst initialState = persistedState\n  ? persistedState.state.auth\n  : initialStateDefault\n\nconst authSlice = createSlice({\n  name: 'authentification',\n  initialState,\n  reducers: {\n    // action de réinitialisation lors du clic sur Sign out (déconnexion)\n    actionLogout: (state) => {\n      removeTokenStorage(state.isRememberMe)\n      removeState()\n      state.firstName = ''\n      state.lastName = ''\n      state.isLoading = false\n      state.isRememberMe = false\n      state.isToken = false\n      state.toggleEdit = false\n    },\n    // action \"toggle\" d'ouverture/fermeture du formulaire d'édition\n    actionToggleEdit: (state) => {\n      state.toggleEdit = !state.toggleEdit\n    },\n    // action \"toggle\" du checkbox \"Remember me\" du formulaire d'authentification (page Login)\n    actionIsRememberMe: (state) => {\n      state.isRememberMe = !state.isRememberMe\n    },\n    // action de réinitialisation du message d'erreur\n    actionInitErrorMessage: (state) => {\n      state.errorMessage = null\n    },\n  },\n\n  extraReducers: {\n    //Login\n    [mwLogin.fulfilled]: (state) => {\n      // Booleen isToken : token est-il présent dans le storage du navigateur ?\n      state.isToken = isGetTokenStorage()\n      state.errorMessage = null\n    },\n    [mwLogin.pending]: (state) => {\n      state.isLoading = true // début du chargement\n    },\n    [mwLogin.rejected]: (state, action) => {\n      state.isLoading = false // fin du chargement\n      state.errorMessage = action.payload.message // récupération du message d'erreur\n    },\n\n    // Profile : récupération du prénom et du nom de l'Utilisateur dans la base de données\n    [mwGetUserProfile.fulfilled]: (state, action) => {\n      state.firstName = action.payload.firstName\n      state.lastName = action.payload.lastName\n      state.isLoading = false\n      state.isToken = isGetTokenStorage()\n      state.errorMessage = null\n    },\n    [mwGetUserProfile.rejected]: (state, action) => {\n      state.errorMessage = action.payload.message // récupération du message d'erreur\n    },\n\n    // Profile : modification du prénom et du nom de l'Utilisateur dans la base de données\n    [mwUpdateUserProfile.fulfilled]: (state, action) => {\n      state.firstName = action.payload.firstName\n      state.lastName = action.payload.lastName\n      state.errorMessage = null\n    },\n    [mwUpdateUserProfile.rejected]: (state, action) => {\n      state.toggleEdit = false // \"toggle\" d'ouverture/fermeture du formulaire d'édition\n      state.errorMessage = action.payload.message\n    },\n  },\n})\n\nexport const {\n  actionIsRememberMe,\n  actionToggleEdit,\n  actionLogout,\n  actionInitErrorMessage,\n} = authSlice.actions\nexport default authSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}