{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from '../features/auth.slice.js';\nimport { saveState } from '../utils/stateStorageFunctions.js';\n\n// Création du store\nconst store = configureStore({\n  reducer: {\n    auth: authReducer\n  },\n  devTools: true\n});\nexport default store;\nlet myStore = {};\nstore.subscribe(() => {\n  myStore = store.getState();\n  const type = myStore.auth.isRememberMe;\n  // Sauvegarde du state dans le storage :\n  //    - local si \"Remember me\" coché\n  //    - session si \"Remember me\" décoché\n  saveState(type, {\n    state: store.getState()\n  });\n});","map":{"version":3,"names":["configureStore","authReducer","saveState","store","reducer","auth","devTools","myStore","subscribe","getState","type","isRememberMe","state"],"sources":["/Users/kemalkazanc/Desktop/OpenClass/Projet13/frontend/src/store/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport authReducer from '../features/auth.slice.js'\n\nimport { saveState } from '../utils/stateStorageFunctions.js'\n\n// Création du store\nconst store = configureStore({\n  reducer: {\n    auth: authReducer,\n  },\n  devTools: true,\n})\n\nexport default store\n\nlet myStore = {}\nstore.subscribe(() => {\n  myStore = store.getState()\n  const type = myStore.auth.isRememberMe\n  // Sauvegarde du state dans le storage :\n  //    - local si \"Remember me\" coché\n  //    - session si \"Remember me\" décoché\n  saveState(type, {\n    state: store.getState(),\n  })\n})\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,SAASC,SAAS,QAAQ,mCAAmC;;AAE7D;AACA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IACPC,IAAI,EAAEJ;EACR,CAAC;EACDK,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,eAAeH,KAAK;AAEpB,IAAII,OAAO,GAAG,CAAC,CAAC;AAChBJ,KAAK,CAACK,SAAS,CAAC,MAAM;EACpBD,OAAO,GAAGJ,KAAK,CAACM,QAAQ,CAAC,CAAC;EAC1B,MAAMC,IAAI,GAAGH,OAAO,CAACF,IAAI,CAACM,YAAY;EACtC;EACA;EACA;EACAT,SAAS,CAACQ,IAAI,EAAE;IACdE,KAAK,EAAET,KAAK,CAACM,QAAQ,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}