{"ast":null,"code":"var _jsxFileName = \"/Users/kemalkazanc/Desktop/OpenClass/Projet13/frontend/src/components/FormEditName.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionToggleEdit } from '../features/auth.slice.js';\nimport { mwUpdateUserProfile } from '../middlewares/middlewares.js';\nimport { removeState } from '../utils/stateStorageFunctions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormEditName() {\n  _s();\n  var _errors$firstName, _errors$firstName2, _errors$firstName3, _errors$lastName, _errors$lastName2, _errors$lastName3;\n  const dispatch = useDispatch();\n  const {\n    firstName,\n    lastName,\n    isRememberMe\n  } = useSelector(state => state.auth); // récupération des élements du state\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const save = data => {\n    const updateData = {\n      firstName: data.firstName ? data.firstName : firstName,\n      lastName: data.lastName ? data.lastName : lastName\n    };\n    // appel de l'action \"toggle\" d'ouverture/fermeture du formulaire d'édition\n    dispatch(actionToggleEdit());\n    // appel de la fonction de modification du prénom et du nom de l'utilisateur dans la base de données\n    dispatch(mwUpdateUserProfile(updateData, isRememberMe));\n    removeState();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputName-wrapper inputName-wrapper-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputNameError\",\n          children: [(errors === null || errors === void 0 ? void 0 : (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pErrorName\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName2 = errors.firstName) === null || _errors$firstName2 === void 0 ? void 0 : _errors$firstName2.type) === 'maxLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pErrorName\",\n            children: \"Cannot exceed 20 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$firstName3 = errors.firstName) === null || _errors$firstName3 === void 0 ? void 0 : _errors$firstName3.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pErrorName\",\n            children: \"Alphabetical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"firstName\",\n          placeholder: \"enter your firstname\",\n          ...register('firstName', {\n            required: true,\n            maxLength: 20,\n            pattern: /^[a-zA-Z\\s\\-À-ÖØ-öø-ÿ']+$/g\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gapInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputNameError\",\n          children: [(errors === null || errors === void 0 ? void 0 : (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.type) === 'required' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pErrorName pLastName\",\n            children: \"This field is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$lastName2 = errors.lastName) === null || _errors$lastName2 === void 0 ? void 0 : _errors$lastName2.type) === 'maxLength' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pErrorName pLastName\",\n            children: \"Cannot exceed 20 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), (errors === null || errors === void 0 ? void 0 : (_errors$lastName3 = errors.lastName) === null || _errors$lastName3 === void 0 ? void 0 : _errors$lastName3.type) === 'pattern' && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pErrorName pLastName\",\n            children: \"Alphabetical characters only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"lastName\",\n          placeholder: \"enter your lastname\",\n          ...register('lastName', {\n            required: true,\n            maxLength: 20,\n            pattern: /^[a-zA-Z\\s\\-À-ÖØ-öø-ÿ']+$/g\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputName-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: handleSubmit(save),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gapInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => dispatch(actionToggleEdit()),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(FormEditName, \"8NqMlXRI7BU05Xw1+2ufBAVACKA=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n_c = FormEditName;\nvar _c;\n$RefreshReg$(_c, \"FormEditName\");","map":{"version":3,"names":["React","useForm","useSelector","useDispatch","actionToggleEdit","mwUpdateUserProfile","removeState","jsxDEV","_jsxDEV","FormEditName","_s","_errors$firstName","_errors$firstName2","_errors$firstName3","_errors$lastName","_errors$lastName2","_errors$lastName3","dispatch","firstName","lastName","isRememberMe","state","auth","register","handleSubmit","formState","errors","save","data","updateData","children","className","type","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","required","maxLength","pattern","onClick","_c","$RefreshReg$"],"sources":["/Users/kemalkazanc/Desktop/OpenClass/Projet13/frontend/src/components/FormEditName.jsx"],"sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionToggleEdit } from '../features/auth.slice.js'\nimport { mwUpdateUserProfile } from '../middlewares/middlewares.js'\nimport { removeState } from '../utils/stateStorageFunctions.js'\n\nexport default function FormEditName() {\n  const dispatch = useDispatch()\n  const { firstName, lastName, isRememberMe } = useSelector(\n    (state) => state.auth\n  ) // récupération des élements du state\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm()\n\n  const save = (data) => {\n    const updateData = {\n      firstName: data.firstName ? data.firstName : firstName,\n      lastName: data.lastName ? data.lastName : lastName,\n    }\n    // appel de l'action \"toggle\" d'ouverture/fermeture du formulaire d'édition\n    dispatch(actionToggleEdit())\n    // appel de la fonction de modification du prénom et du nom de l'utilisateur dans la base de données\n    dispatch(mwUpdateUserProfile(updateData, isRememberMe))\n    removeState()\n  }\n\n  return (\n    <form>\n      <div className=\"inputName-wrapper inputName-wrapper-column\">\n        <div className=\"inputContainer\">\n          <div className=\"inputNameError\">\n            {errors?.firstName?.type === 'required' && (\n              <p className=\"pErrorName\">This field is required</p>\n            )}\n            {errors?.firstName?.type === 'maxLength' && (\n              <p className=\"pErrorName\">Cannot exceed 20 characters</p>\n            )}\n            {errors?.firstName?.type === 'pattern' && (\n              <p className=\"pErrorName\">Alphabetical characters only</p>\n            )}\n          </div>\n          <input\n            name=\"firstName\"\n            placeholder=\"enter your firstname\"\n            {...register('firstName', {\n              required: true,\n              maxLength: 20,\n              pattern: /^[a-zA-Z\\s\\-À-ÖØ-öø-ÿ']+$/g,\n            })}\n          />\n        </div>\n        <div className=\"gapInput\"></div>\n        <div className=\"inputContainer\">\n          <div className=\"inputNameError\">\n            {errors?.lastName?.type === 'required' && (\n              <p className=\"pErrorName pLastName\">This field is required</p>\n            )}\n            {errors?.lastName?.type === 'maxLength' && (\n              <p className=\"pErrorName pLastName\">\n                Cannot exceed 20 characters\n              </p>\n            )}\n            {errors?.lastName?.type === 'pattern' && (\n              <p className=\"pErrorName pLastName\">\n                Alphabetical characters only\n              </p>\n            )}\n          </div>\n          <input\n            name=\"lastName\"\n            placeholder=\"enter your lastname\"\n            {...register('lastName', {\n              required: true,\n              maxLength: 20,\n              pattern: /^[a-zA-Z\\s\\-À-ÖØ-öø-ÿ']+$/g,\n            })}\n          />\n        </div>\n      </div>\n\n      <div className=\"inputName-wrapper\">\n        <button className=\"edit-button\" onClick={handleSubmit(save)}>\n          Save\n        </button>\n        <div className=\"gapInput\"></div>\n        <button\n          className=\"edit-button\"\n          onClick={() => dispatch(actionToggleEdit())}\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}