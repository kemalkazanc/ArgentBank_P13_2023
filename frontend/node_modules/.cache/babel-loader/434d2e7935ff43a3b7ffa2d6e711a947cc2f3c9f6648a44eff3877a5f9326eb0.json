{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { serviceLogin, serviceGetUserProfile, serviceUpdateUserProfile } from '../services/auth.service';\n\n// Page Login : Authentification de l'Utilisateur\nexport const mwLogin = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const isRememberMe = getState().auth.isRememberMe;\n    // retourne l'email et le mot de passe au backend pour authentification\n    return await serviceLogin(email, password, isRememberMe);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    // retourne le message d'erreur récupéré\n    return rejectWithValue({\n      message\n    });\n  }\n});\n\n// Page Profile : Récupération  du prénom et du nom depuis la base de données\nexport const mwGetUserProfile = createAsyncThunk('auth/getUserProfile', async (payloadUserProfile, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const isRememberMe = getState().auth.isRememberMe;\n    // retourne le prénom et le nom de l'utilisateur dans la page profile\n    return await serviceGetUserProfile(payloadUserProfile, isRememberMe);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    // retourne le emssage d'erreur récupéré\n    return rejectWithValue({\n      message\n    });\n  }\n});\n\n// Page Profile : Mise à jour du prénom et du nom dans la base de données\nexport const mwUpdateUserProfile = createAsyncThunk('auth/updateUserProfile', async (payloadUpdateData, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const isRememberMe = getState().auth.isRememberMe;\n    // retourne le prénom et le nom modifiés de l'utilisateur dans la page profile et dans la base de données\n    return await serviceUpdateUserProfile(payloadUpdateData, isRememberMe);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    // retourne le message d'erreur récupéré\n    return rejectWithValue({\n      message\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","serviceLogin","serviceGetUserProfile","serviceUpdateUserProfile","mwLogin","email","password","getState","rejectWithValue","isRememberMe","auth","error","message","response","data","toString","mwGetUserProfile","payloadUserProfile","mwUpdateUserProfile","payloadUpdateData"],"sources":["/Users/kemalkazanc/Desktop/OpenClass/Projet13/frontend/src/middlewares/middlewares.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  serviceLogin,\n  serviceGetUserProfile,\n  serviceUpdateUserProfile,\n} from '../services/auth.service'\n\n// Page Login : Authentification de l'Utilisateur\nexport const mwLogin = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }, { getState, rejectWithValue }) => {\n    try {\n      const isRememberMe = getState().auth.isRememberMe\n      // retourne l'email et le mot de passe au backend pour authentification\n      return await serviceLogin(email, password, isRememberMe)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      // retourne le message d'erreur récupéré\n      return rejectWithValue({ message })\n    }\n  }\n)\n\n// Page Profile : Récupération  du prénom et du nom depuis la base de données\nexport const mwGetUserProfile = createAsyncThunk(\n  'auth/getUserProfile',\n  async (payloadUserProfile, { getState, rejectWithValue }) => {\n    try {\n      const isRememberMe = getState().auth.isRememberMe\n      // retourne le prénom et le nom de l'utilisateur dans la page profile\n      return await serviceGetUserProfile(payloadUserProfile, isRememberMe)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      // retourne le emssage d'erreur récupéré\n      return rejectWithValue({ message })\n    }\n  }\n)\n\n// Page Profile : Mise à jour du prénom et du nom dans la base de données\nexport const mwUpdateUserProfile = createAsyncThunk(\n  'auth/updateUserProfile',\n  async (payloadUpdateData, { getState, rejectWithValue }) => {\n    try {\n      const isRememberMe = getState().auth.isRememberMe\n      // retourne le prénom et le nom modifiés de l'utilisateur dans la page profile et dans la base de données\n      return await serviceUpdateUserProfile(payloadUpdateData, isRememberMe)\n    } catch (error) {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString()\n      // retourne le message d'erreur récupéré\n      return rejectWithValue({ message })\n    }\n  }\n)\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SACEC,YAAY,EACZC,qBAAqB,EACrBC,wBAAwB,QACnB,0BAA0B;;AAEjC;AACA,OAAO,MAAMC,OAAO,GAAGJ,gBAAgB,CACrC,YAAY,EACZ,OAAO;EAAEK,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAC5D,IAAI;IACF,MAAMC,YAAY,GAAGF,QAAQ,CAAC,CAAC,CAACG,IAAI,CAACD,YAAY;IACjD;IACA,OAAO,MAAMR,YAAY,CAACI,KAAK,EAAEC,QAAQ,EAAEG,YAAY,CAAC;EAC1D,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACE,QAAQ,IACbF,KAAK,CAACE,QAAQ,CAACC,IAAI,IACnBH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACF,OAAO,IAC7BD,KAAK,CAACC,OAAO,IACbD,KAAK,CAACI,QAAQ,CAAC,CAAC;IAClB;IACA,OAAOP,eAAe,CAAC;MAAEI;IAAQ,CAAC,CAAC;EACrC;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMI,gBAAgB,GAAGhB,gBAAgB,CAC9C,qBAAqB,EACrB,OAAOiB,kBAAkB,EAAE;EAAEV,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAC3D,IAAI;IACF,MAAMC,YAAY,GAAGF,QAAQ,CAAC,CAAC,CAACG,IAAI,CAACD,YAAY;IACjD;IACA,OAAO,MAAMP,qBAAqB,CAACe,kBAAkB,EAAER,YAAY,CAAC;EACtE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACE,QAAQ,IACbF,KAAK,CAACE,QAAQ,CAACC,IAAI,IACnBH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACF,OAAO,IAC7BD,KAAK,CAACC,OAAO,IACbD,KAAK,CAACI,QAAQ,CAAC,CAAC;IAClB;IACA,OAAOP,eAAe,CAAC;MAAEI;IAAQ,CAAC,CAAC;EACrC;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMM,mBAAmB,GAAGlB,gBAAgB,CACjD,wBAAwB,EACxB,OAAOmB,iBAAiB,EAAE;EAAEZ,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAC1D,IAAI;IACF,MAAMC,YAAY,GAAGF,QAAQ,CAAC,CAAC,CAACG,IAAI,CAACD,YAAY;IACjD;IACA,OAAO,MAAMN,wBAAwB,CAACgB,iBAAiB,EAAEV,YAAY,CAAC;EACxE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMC,OAAO,GACVD,KAAK,CAACE,QAAQ,IACbF,KAAK,CAACE,QAAQ,CAACC,IAAI,IACnBH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACF,OAAO,IAC7BD,KAAK,CAACC,OAAO,IACbD,KAAK,CAACI,QAAQ,CAAC,CAAC;IAClB;IACA,OAAOP,eAAe,CAAC;MAAEI;IAAQ,CAAC,CAAC;EACrC;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}